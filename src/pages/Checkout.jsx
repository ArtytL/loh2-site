// src/pages/Checkout.jsx
import { useMemo, useState, useEffect } from "react";

/* ===== ENV + ENDPOINTS ===== */
const API_URL  = (import.meta.env.VITE_API_URL || "").trim();  // e.g. https://email-five-alpha.vercel.app/api
const SEND_URL = `${API_URL.replace(/\/$/, "")}/send-order`;    // -> https://.../api/send-order
const SHIPPING = Number(import.meta.env.VITE_SHIPPING_FEE || 50);

/* ===== utils ===== */
const fmt = (n) =>
  (Number(n) || 0).toLocaleString("th-TH", { maximumFractionDigits: 0 }) +
  " ‡∏ö‡∏≤‡∏ó";

const getCart = () => {
  try {
    return JSON.parse(localStorage.getItem("cart") || "[]");
  } catch {
    return [];
  }
};
const saveCart = (c) => localStorage.setItem("cart", JSON.stringify(c));

/* ===== component ===== */
export default function Checkout() {
  const [cart, setCart] = useState([]);
  const [sending, setSending] = useState(false);
  const [msg, setMsg] = useState("");

  // ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠
  const [form, setForm] = useState({
    orderId: "", // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡πà‡∏≤‡∏á ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞ gen ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ô‡∏™‡πà‡∏á
    name: "",
    email: "",
    phone: "",
    address: "",
    note: "",
  });

  // ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤
  useEffect(() => {
    const c = getCart();
    setCart(c);
  }, []);

  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
  useEffect(() => {
    saveCart(cart);
  }, [cart]);

  const subtotal = useMemo(
    () =>
      cart.reduce(
        (s, it) => s + (Number(it.price) || 0) * (Number(it.qty) || 1),
        0
      ),
    [cart]
  );
  const grand = subtotal + SHIPPING;

  const onChange = (e) => {
    const { name, value } = e.target;
    setForm((f) => ({ ...f, [name]: value }));
  };

  const setQty = (index, qty) => {
    setCart((c) => {
      const newC = [...c];
      const q = Math.max(1, Number(qty) || 1);
      newC[index] = { ...newC[index], qty: q };
      return newC;
    });
  };

  const removeItem = (index) => {
    setCart((c) => c.filter((_, i) => i !== index));
  };

  const clearMsgLater = () => {
    setTimeout(() => setMsg(""), 4000);
  };

  const handleSubmit = async (e) => {
    e?.preventDefault?.();
    setMsg("");
    if (!cart.length) {
      setMsg("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤");
      clearMsgLater();
      return;
    }
    if (!form.email || !/^[^@\s]+@[^@\s]+\.[^@\s]+$/.test(form.email)) {
      setMsg("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
      clearMsgLater();
      return;
    }
    if (!form.phone) {
      setMsg("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£");
      clearMsgLater();
      return;
    }
    if (!form.address) {
      setMsg("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á");
      clearMsgLater();
      return;
    }

    const orderId =
      (form.orderId || "").trim() ||
      `L${new Date().toISOString().slice(2, 10).replace(/-/g, "")}-${
        Math.random().toString(36).slice(2, 7)
      }`;

    const payload = {
      orderId,
      name: form.name,
      email: form.email,
      phone: form.phone,
      address: form.address,
      note: form.note,
      cart,
      shipping: SHIPPING,
      subtotal,
      grand,
      // ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ backend ‡∏≠‡∏¢‡∏≤‡∏Å‡∏£‡∏π‡πâ referrer
      source: "loh2-site",
    };

    try {
      setSending(true);
      const res = await fetch(SEND_URL, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
      });
      if (!res.ok) throw new Error(`HTTP ${res.status}`);
      const data = await res.json().catch(() => ({}));

      setMsg("‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ üéâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì");
      // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡∏™‡πà‡∏á (‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏Ç‡πâ‡∏≤‡∏á‡∏•‡πà‡∏≤‡∏á)
      setCart([]);
      saveCart([]);

      // ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏î‡πâ‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÇ‡∏≠‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ:
      // window.location.hash = "#/transfer";
    } catch (err) {
      setMsg(`‡∏™‡πà‡∏á‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${err.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î"}`);
    } finally {
      setSending(false);
      clearMsgLater();
    }
  };

  return (
    <div style={s.container}>
      <h1 style={{ marginBottom: 8 }}>‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏≠‡∏≤‡∏ï‡πå</h1>
      {!cart.length ? (
        <p style={{ opacity: 0.7 }}>‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏ß‡πà‡∏≤‡∏á</p>
      ) : null}

      <div style={s.grid}>
        {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
        <div style={s.card}>
          <h3 style={{ marginTop: 0 }}>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h3>
          {!cart.length ? (
            <div style={{ opacity: 0.7 }}>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤</div>
          ) : (
            <div style={{ display: "grid", gap: 12 }}>
              {cart.map((it, i) => (
                <div key={i} style={s.row}>
                  <div style={{ flex: 1 }}>
                    <div style={{ fontWeight: 600 }}>{it.title || "-"}</div>
                    <div style={{ opacity: 0.7, fontSize: 13 }}>
                      ‡∏£‡∏≤‡∏Ñ‡∏≤: {fmt(it.price)}
                    </div>
                  </div>
                  <div>
                    <input
                      type="number"
                      min={1}
                      value={it.qty ?? 1}
                      onChange={(e) => setQty(i, e.target.value)}
                      style={{ ...s.input, width: 90 }}
                    />
                  </div>
                  <div style={{ width: 120, textAlign: "right" }}>
                    {fmt((Number(it.price) || 0) * (Number(it.qty) || 1))}
                  </div>
                  <button style={s.linkBtn} onClick={() => removeItem(i)}>
                    ‡∏•‡∏ö
                  </button>
                </div>
              ))}

              <div style={s.line} />

              <div style={s.row}>
                <div style={{ flex: 1, opacity: 0.8 }}>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</div>
                <div style={{ width: 120, textAlign: "right" }}>
                  {fmt(subtotal)}
                </div>
              </div>
              <div style={s.row}>
                <div style={{ flex: 1, opacity: 0.8 }}>
                  ‡∏Ñ‡πà‡∏≤‡∏™‡πà‡∏á{" "}
                  <span style={s.chip}>‡πÄ‡∏´‡∏°‡∏≤‡∏à‡πà‡∏≤‡∏¢</span>
                </div>
                <div style={{ width: 120, textAlign: "right" }}>
                  {fmt(SHIPPING)}
                </div>
              </div>

              <div style={s.row}>
                <div style={{ flex: 1, fontWeight: 700 }}>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô</div>
                <div style={{ width: 120, textAlign: "right", fontWeight: 700 }}>
                  {fmt(grand)}
                </div>
              </div>
            </div>
          )}
        </div>

        {/* ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏ú‡∏π‡πâ‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠ */}
        <form style={s.card} onSubmit={handleSubmit}>
          <h3 style={{ marginTop: 0 }}>‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠</h3>

          <label style={s.label}>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå (‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)</label>
          <input
            name="orderId"
            value={form.orderId}
            onChange={onChange}
            placeholder="‡πÄ‡∏ä‡πà‡∏ô L2-1725..."
            style={s.input}
          />

          <label style={s.label}>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</label>
          <input
            name="name"
            value={form.name}
            onChange={onChange}
            style={s.input}
            placeholder="‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
          />

          <div style={{ display: "grid", gridTemplateColumns: "1fr 1fr", gap: 12 }}>
            <div>
              <label style={s.label}>‡∏≠‡∏µ‡πÄ‡∏°‡∏•*</label>
              <input
                required
                name="email"
                type="email"
                value={form.email}
                onChange={onChange}
                style={s.input}
                placeholder="your@email.com"
              />
            </div>
            <div>
              <label style={s.label}>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£*</label>
              <input
                required
                name="phone"
                value={form.phone}
                onChange={onChange}
                style={s.input}
                placeholder="0812345678"
              />
            </div>
          </div>

          <label style={s.label}>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á*</label>
          <textarea
            required
            name="address"
            value={form.address}
            onChange={onChange}
            style={s.textarea}
            placeholder="‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà / ‡∏ñ‡∏ô‡∏ô / ‡πÅ‡∏Ç‡∏ß‡∏á/‡∏ï‡∏≥‡∏ö‡∏• / ‡πÄ‡∏Ç‡∏ï/‡∏≠‡∏≥‡πÄ‡∏†‡∏≠ / ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î / ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå"
          />

          <label style={s.label}>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</label>
          <input
            name="note"
            value={form.note}
            onChange={onChange}
            style={s.input}
            placeholder="‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° (‡πÄ‡∏ä‡πà‡∏ô ‡∏≠‡∏≠‡∏Å‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à / ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ‡∏Ø‡∏•‡∏Ø)"
          />

          {msg && (
            <div style={{ marginTop: 8, marginBottom: 8, color: "#c00" }}>{msg}</div>
          )}

          <button type="submit" style={s.btn} disabled={sending || !cart.length}>
            {sending ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á..." : "‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠"}
          </button>

          <div style={{ marginTop: 12 }}>
            ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏õ‡∏ó‡∏µ‡πà{" "}
            <a href="#/transfer" style={{ textDecoration: "underline" }}>
              ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÇ‡∏≠‡∏ô
            </a>{" "}
            ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß
          </div>
        </form>
      </div>

      <div style={{ marginTop: 16, fontSize: 12, opacity: 0.6 }}>
        API: {SEND_URL}
      </div>
    </div>
  );
}

/* ===== styles (inline, lightweight) ===== */
const s = {
  container: { maxWidth: 980, margin: "0 auto", padding: 16 },
  grid: {
    display: "grid",
    gridTemplateColumns: "1.1fr 0.9fr",
    gap: 16,
  },
  card: {
    border: "1px solid #eee",
    borderRadius: 12,
    padding: 16,
    background: "#fff",
  },
  label: { display: "block", marginTop: 8, marginBottom: 6, fontSize: 13, opacity: 0.8 },
  input: {
    width: "100%",
    padding: "10px 12px",
    border: "1px solid #ddd",
    borderRadius: 8,
    outline: "none",
  },
  textarea: { width: "100%", padding: "10px 12px", border: "1px solid #ddd", borderRadius: 8, minHeight: 96, outline: "none" },
  row: { display: "flex", alignItems: "center", gap: 12 },
  line: { height: 1, background: "#eee", margin: "6px 0 10px" },
  btn: {
    padding: "12px 14px",
    borderRadius: 8,
    background: "#111",
    color: "#fff",
    border: 0,
    cursor: "pointer",
    width: "100%",
    marginTop: 8,
  },
  chip: {
    padding: "2px 8px",
    borderRadius: 6,
    border: "1px solid #ddd",
    background: "#fff",
    cursor: "default",
    fontSize: 12,
    marginLeft: 6,
  },
  linkBtn: {
    padding: "4px 10px",
    borderRadius: 6,
    border: "1px solid #ddd",
    background: "#fff",
    cursor: "pointer",
  },
};
